'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helper = require('@appbaseio/reactivecore/lib/utils/helper');

var _types = require('@appbaseio/reactivecore/lib/utils/types');

var _types2 = _interopRequireDefault(_types);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Results = function (_React$Component) {
	_inherits(Results, _React$Component);

	function Results() {
		_classCallCheck(this, Results);

		return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	}

	Results.prototype.render = function render() {
		var _this2 = this;

		if (this.props.hasCustomRender) {
			return this.props.getComponent();
		}

		return _react2.default.createElement(
			'div',
			{
				className: this.props.listClass + ' ' + (0, _helper.getClassName)(this.props.innerClass, 'list')
			},
			this.props.filteredResults.map(function (item, index) {
				return _this2.props.renderItem(item, function () {
					_this2.props.triggerClickAnalytics(_this2.props.base + index);
				});
			})
		);
	};

	return Results;
}(_react2.default.Component);

Results.propTypes = {
	hasCustomRender: _types2.default.boolRequired,
	innerClass: _types2.default.style,
	renderItem: _types2.default.func,
	base: _types2.default.number,
	getComponent: _types2.default.func,
	listClass: _types2.default.string,
	filteredResults: _types2.default.hits,
	triggerClickAnalytics: _types2.default.func
};

exports.default = Results;